# Generated by Django 3.2.9 on 2024-01-10 12:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Debtors_Name', models.CharField(blank=True, max_length=20, null=True)),
                ('Print_As', models.CharField(blank=True, max_length=20, null=True)),
                ('Phone', models.CharField(blank=True, max_length=50, null=True)),
                ('Fax', models.CharField(blank=True, max_length=50, null=True)),
                ('Website', models.CharField(blank=True, max_length=50, null=True)),
                ('Contact_Person', models.CharField(blank=True, max_length=50, null=True)),
                ('Address', models.TextField(null=True)),
                ('Thana', models.CharField(blank=True, max_length=50, null=True)),
                ('City', models.CharField(blank=True, max_length=50, null=True)),
                ('Email', models.EmailField(blank=True, max_length=50, null=True)),
                ('Status', models.BooleanField(blank=True, null=True)),
                ('Branch', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
                ('job', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
                ('postal_code', models.CharField(max_length=20)),
                ('birthday', models.DateField()),
                ('gender', models.CharField(max_length=10)),
                ('national_id', models.CharField(max_length=255)),
                ('hired_date', models.DateField()),
                ('card_number', models.CharField(max_length=255)),
                ('mobile_phone', models.CharField(max_length=20)),
                ('termination_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('item_name', models.CharField(max_length=255)),
                ('sku', models.CharField(max_length=255)),
                ('quantity', models.FloatField()),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('unit', models.CharField(default='kg', max_length=100)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PartyList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Party_Name', models.CharField(blank=True, max_length=20, null=True)),
                ('Print_As', models.CharField(blank=True, max_length=20, null=True)),
                ('Phone', models.CharField(blank=True, max_length=50, null=True)),
                ('Fax', models.CharField(blank=True, max_length=50, null=True)),
                ('Website', models.CharField(blank=True, max_length=50, null=True)),
                ('Contact_Person', models.CharField(blank=True, max_length=50, null=True)),
                ('Address', models.TextField(null=True)),
                ('Thana', models.CharField(blank=True, max_length=50, null=True)),
                ('City', models.CharField(blank=True, max_length=50, null=True)),
                ('Email', models.EmailField(blank=True, max_length=50, null=True)),
                ('Status', models.BooleanField(blank=True, null=True)),
                ('Branch', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethodname',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('info_status', models.CharField(blank=True, choices=[('DEBIT', 'DEBIT'), ('CREDIT', 'CREDIT')], default='Cash', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('uom', models.CharField(max_length=255)),
                ('vendor', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=255, null=True)),
                ('variation_name', models.CharField(blank=True, max_length=255, null=True)),
                ('variation_values', models.CharField(blank=True, max_length=255, null=True)),
                ('barcode_type', models.CharField(blank=True, max_length=255, null=True)),
                ('alert_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('lead_time', models.IntegerField(blank=True, default=0, null=True)),
                ('reorder_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('reorder_date', models.DateField(blank=True, null=True)),
                ('expires_in', models.IntegerField(blank=True, default=0, null=True)),
                ('tax', models.IntegerField(blank=True, default=0, null=True)),
                ('purchase_price', models.FloatField(blank=True, null=True)),
                ('transport_cost', models.FloatField(blank=True, default=0, null=True)),
                ('other_cost', models.FloatField(blank=True, default=0, null=True)),
                ('manage_stock', models.IntegerField(blank=True, null=True)),
                ('cogs', models.FloatField(blank=True, null=True)),
                ('selling_price', models.FloatField(default=0.0)),
                ('product_type', models.CharField(blank=True, max_length=255, null=True)),
                ('profit_margin_base_seeling', models.IntegerField(default=45)),
                ('profit_margin_mrp', models.IntegerField(blank=True, default=0, null=True)),
                ('base_selling_price', models.FloatField(blank=True, null=True)),
                ('mrp', models.FloatField(blank=True, null=True)),
                ('opening_stock', models.IntegerField(blank=True, default=0, null=True)),
                ('inventory_location', models.CharField(blank=True, default='none', max_length=255, null=True)),
                ('weight', models.FloatField(blank=True, default=0, null=True)),
                ('position', models.IntegerField(blank=True, default=0, null=True)),
                ('rack', models.IntegerField(blank=True, default=0, null=True)),
                ('row', models.IntegerField(blank=True, default=0, null=True)),
                ('max_order_quantity', models.FloatField(blank=True, default=0, null=True)),
                ('min_order_quantity', models.FloatField(blank=True, default=0, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('product_description', models.TextField(blank=True, null=True)),
                ('instruction', models.TextField(blank=True, null=True)),
                ('custom_field_1', models.CharField(blank=True, default='none', max_length=255, null=True)),
                ('custom_field_2', models.CharField(blank=True, default='none', max_length=255, null=True)),
                ('custom_field_3', models.CharField(blank=True, default='none', max_length=255, null=True)),
                ('selling', models.BooleanField(blank=True, default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SetPos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_with_discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.FloatField(blank=True, default=0, null=True)),
                ('due_amount', models.FloatField(default=0)),
                ('status', models.CharField(max_length=100)),
                ('order_sheet', models.CharField(blank=True, default='order', max_length=100, null=True)),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('delivery_date', models.DateTimeField(auto_now_add=True)),
                ('delivery_status', models.CharField(blank=True, default='incomplete', max_length=100, null=True)),
                ('invoice_by', models.CharField(max_length=100)),
                ('systemname', models.CharField(blank=True, max_length=100, null=True)),
                ('cancel_show', models.CharField(default='show', max_length=100)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpApp.customerlist')),
                ('products', models.ManyToManyField(to='ErpApp.InvoiceProduct')),
            ],
        ),
        migrations.CreateModel(
            name='SetPosPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_with_discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=100)),
                ('delivery_status', models.CharField(blank=True, choices=[('Pending', 'Pending'), ('Start Progress', 'Start Progress'), ('Complete', 'Complete'), ('Reject', 'Reject'), ('Close', 'Close')], default='Pending', max_length=100, null=True)),
                ('amount', models.IntegerField(blank=True, default=0, null=True)),
                ('paid_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('due_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('description', models.TextField(blank=True, default='null', null=True)),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('delivery_date', models.DateTimeField(auto_now_add=True)),
                ('branch', models.CharField(blank=True, default='Head Branch', max_length=100, null=True)),
                ('invoice_by', models.CharField(max_length=100)),
                ('approved_by', models.CharField(blank=True, default='Hussain', max_length=100, null=True)),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpApp.partylist')),
                ('products', models.ManyToManyField(to='ErpApp.InvoiceProduct')),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vouchernumber', models.IntegerField(blank=True, default=0, null=True)),
                ('amount', models.FloatField()),
                ('payment_status', models.CharField(blank=True, choices=[('CASH', 'CASH'), ('CHEQUE', 'CHEQUE'), ('Bank Deposit', 'Bank Deposit'), ('Card', 'Card'), ('Bkash', 'Bkash')], default='Cash', max_length=100, null=True)),
                ('description', models.TextField()),
                ('type', models.CharField(blank=True, choices=[('Receive', 'Receive'), ('Payment', 'Payment')], default='Receive', max_length=100, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('account_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpApp.paymentmethodname')),
                ('purchasepos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ErpApp.setpospurchase')),
                ('salepos', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ErpApp.setpos')),
            ],
        ),
        migrations.CreateModel(
            name='SetPosCancelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_with_discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.FloatField(blank=True, default=0, null=True)),
                ('due_amount', models.FloatField(default=0)),
                ('status', models.CharField(max_length=100)),
                ('order_sheet', models.CharField(blank=True, default='order', max_length=100, null=True)),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('delivery_date', models.DateTimeField(auto_now_add=True)),
                ('delivery_status', models.CharField(blank=True, default='incomplete', max_length=100, null=True)),
                ('invoice_by', models.CharField(max_length=100)),
                ('systemname', models.CharField(blank=True, max_length=100, null=True)),
                ('your_datetime_field', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpApp.customerlist')),
                ('products', models.ManyToManyField(to='ErpApp.InvoiceProduct')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, choices=[('Sale', 'Sale'), ('Purchase', 'Purchase'), ('Delivery', 'Delivery'), ('Cashier', 'Cashier'), ('Financial Manager', 'Financial Manager'), ('General Manager', 'General Manager'), ('Director', 'Director'), ('CEO', 'CEO')], max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_users', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, error_messages={'add': 'User cannot be assigned the permission because they do not have the view permission.', 'remove': 'User cannot have the permission removed because they do not have the view permission.'}, help_text='Specific permissions for this user.', related_name='custom_users_permissions', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_sale_now', models.FloatField(blank=True, default=0, null=True)),
                ('pos_sale_now', models.FloatField(blank=True, default=0, null=True)),
                ('total_sale', models.FloatField(blank=True, null=True)),
                ('total_purcahse', models.FloatField(blank=True, null=True)),
                ('total_sell_discount', models.FloatField(blank=True, null=True)),
                ('total_payment_done', models.FloatField(blank=True, default=0, null=True)),
                ('total_amount', models.FloatField(blank=True, null=True)),
                ('total_due_amount', models.FloatField(blank=True, default=0, null=True)),
                ('invoice_id_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ErpApp.setpos')),
                ('pos_id_view', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ErpApp.setpospurchase')),
            ],
        ),
    ]
