# Generated by Django 4.2.7 on 2023-11-24 12:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Debtors_Name', models.CharField(blank=True, max_length=20, null=True)),
                ('Print_As', models.CharField(blank=True, max_length=20, null=True)),
                ('Phone', models.CharField(blank=True, max_length=50, null=True)),
                ('Fax', models.CharField(blank=True, max_length=50, null=True)),
                ('Website', models.CharField(blank=True, max_length=50, null=True)),
                ('Contact_Person', models.CharField(blank=True, max_length=50, null=True)),
                ('Address', models.TextField(null=True)),
                ('Thana', models.CharField(blank=True, max_length=50, null=True)),
                ('City', models.CharField(blank=True, max_length=50, null=True)),
                ('Email', models.EmailField(blank=True, max_length=50, null=True)),
                ('Status', models.BooleanField(blank=True, null=True)),
                ('Branch', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('item_name', models.CharField(max_length=255)),
                ('sku', models.IntegerField()),
                ('quantity', models.IntegerField()),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ItemName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SetPos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_with_discount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=100)),
                ('invoice_date', models.DateTimeField(auto_now_add=True)),
                ('delivery_date', models.DateTimeField(auto_now_add=True)),
                ('invoice_by', models.CharField(max_length=100)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpApp.customerlist')),
                ('products', models.ManyToManyField(to='ErpApp.invoiceproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('sku', models.PositiveIntegerField(blank=True, null=True, unique=True)),
                ('uom', models.CharField(max_length=255)),
                ('vendor', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=255, null=True)),
                ('product_type', models.CharField(choices=[('single', 'Single'), ('group', 'Group')], max_length=50)),
                ('variation_name', models.CharField(blank=True, max_length=255)),
                ('variation_values', models.CharField(blank=True, max_length=255)),
                ('barcode_type', models.CharField(blank=True, max_length=255, null=True)),
                ('alert_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('lead_time', models.IntegerField(blank=True, default=0, null=True)),
                ('reorder_quantity', models.IntegerField(blank=True, default=0, null=True)),
                ('reorder_date', models.DateField()),
                ('expires_in', models.IntegerField(blank=True, default=0, null=True)),
                ('tax', models.IntegerField(blank=True, default=0, null=True)),
                ('purchase_price', models.FloatField()),
                ('transport_cost', models.FloatField(blank=True, default=0, null=True)),
                ('other_cost', models.FloatField(blank=True, default=0, null=True)),
                ('cogs', models.FloatField(blank=True, null=True)),
                ('profit_margin_base_seeling', models.IntegerField(default=45)),
                ('profit_margin_mrp', models.IntegerField(blank=True, default=0, null=True)),
                ('base_selling_price', models.FloatField(blank=True, null=True)),
                ('mrp', models.FloatField(blank=True, null=True)),
                ('opening_stock', models.IntegerField(blank=True, default=0, null=True)),
                ('inventory_location', models.CharField(max_length=255)),
                ('weight', models.FloatField(blank=True, default=0, null=True)),
                ('position', models.IntegerField(blank=True, default=0, null=True)),
                ('rack', models.IntegerField(blank=True, default=0, null=True)),
                ('row', models.IntegerField(blank=True, default=0, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('product_description', models.TextField(blank=True, null=True)),
                ('instruction', models.TextField(blank=True, null=True)),
                ('custom_field_1', models.CharField(blank=True, max_length=255)),
                ('custom_field_2', models.CharField(blank=True, max_length=255)),
                ('custom_field_3', models.CharField(blank=True, max_length=255)),
                ('selling', models.BooleanField(default=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ErpApp.itemname')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, choices=[('Sale', 'Sale'), ('Purchase', 'Purchase'), ('Delivery', 'Delivery'), ('Cashier', 'Cashier'), ('Financial Manager', 'Financial Manager'), ('General Manager', 'General Manager'), ('Director', 'Director'), ('CEO', 'CEO')], max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_users', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, error_messages={'add': 'User cannot be assigned the permission because they do not have the view permission.', 'remove': 'User cannot have the permission removed because they do not have the view permission.'}, help_text='Specific permissions for this user.', related_name='custom_users_permissions', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
